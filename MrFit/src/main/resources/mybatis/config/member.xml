<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
    <sql id="selectall">
       select id,name,phone,address,email,point,totalspent,status,answer,qno,grade from member
    </sql>
    
    <resultMap type="memberVO" id="MRM">
       <result column="grade" property="gradeVO.grade"/>
       <result column="percent" property="gradeVO.percent"/>
    </resultMap>
    
    <!-- 아이디로 회원 정보 찾기 -->
    <select id="findMemberById" parameterType="string" resultMap="MRM" resultType="memberVO">
       SELECT   m.id,   m.password,  m.name, m.phone, m.address, m.email, m.grade, g.percent, m.point, 
      m.totalspent, m.status, m.answer, m.qno
      FROM   member m, GRADE g
      WHERE    m.grade=g.grade and id=#{value}   and status='1'
    </select>
    
    <!-- 회원 권한 찾기 -->
    <select id="selectAuthorityById" parameterType="string" resultType="authority">
       SELECT   id,auth 
      FROM   auth 
      WHERE   id=#{value}
    </select>
    
    <!-- 회원가입 -->
    <insert id="registerMember" parameterType="memberVO">
      insert into member(id,   password,  name, phone, address, email, answer, qno)
      values(#{id},#{password},#{name},#{phone},#{address},#{email},#{answer},#{qno})
   </insert>
    
    <!-- 권한 부여 -->
    <insert id="registerRole" parameterType="authority">
      insert into auth (auth,id) values(#{auth},#{id})
   </insert>
    
    <!-- 아이디 체크 -->
    <select id="idcheck" parameterType="string" resultType="int">
      select count(*) from member where id=#{value}
   </select>
 
    <!-- 이메일,이름으로 아이디 찾기 -->
    <select id="findIdByEmailAndName" parameterType="memberVO" resultType="string">
       select id from member where email=#{email} and name=#{name}
    </select>
    
    <!-- 비밀번호 찾기위한 질문 찾기  -->
    <select id="findQnaByIdNameEmail" parameterType="memberVO" resultType="string">
       select question from question q where q.qno=(select qno from member where id=#{id} and name=#{name} and email=#{email})
    </select>
   
   <!-- 고객문의 글 가져오기 -->
    <select id="findQuestionList" resultType="questionVO">
      select qno,question
      from question
   </select>
    
    <!-- 고객문의 -->
    <select id="findMemberByQna" parameterType="memberVO" resultType="memberVO">
       select id, name from member where id=#{id} and name=#{name} and email=#{email} and answer=#{answer}
    </select>
    
    <!-- 비밀번호 수정 -->
    <update id="updatePasswordById" parameterType="memberVO">
       update member set password=#{password} where id=#{id}
    </update>
    
    <!-- 회원 치수 정보 찾기 -->
    <select id="findMemberSizeById" parameterType="string" resultType="memberSizeVO">
       select shoulder, chest, sleeve, armhole, toplength, waist, crotch, thigh, hem, bottomlength from member_size where id=#{value}
    </select>
    
    <!-- 회원 치수 정보 등록 -->
    <insert id="registerMemberSize" parameterType="string">
       insert into member_size(id) 
       values(#{id})
    </insert>
    
    <!-- 회원 치수 정보 수정 -->
    <update id="updateMemberSize" parameterType="memberSizeVO">
       update member_size 
       set shoulder=#{shoulder}, chest=#{chest}, sleeve=#{sleeve}, armhole=#{armhole}, toplength=#{toplength}, waist=#{waist}, crotch=#{crotch}, thigh=#{thigh}, hem=#{hem}, bottomlength=#{bottomlength} 
       where id=#{id}
    </update>
    
   <!-- 회원 정보 수정 -->
    <update id="updateMember" parameterType="memberVO">
      update member set password=#{password},name=#{name},address=#{address},email=#{email}
      where id=#{id}
   </update>
   
   <!-- 쪽지함 -->   
   <select id="memberNoteList" parameterType="map" resultType="noteVO">
      select note_no, content, send_date, id 
      from ( select row_number() over(order by note_no desc) as note_no, content, send_date, id from note where id = #{id} )
      where note_no between #{pagingBean.startRowNumber} and #{pagingBean.endRowNumber}
   </select>
   
   <!-- 쪽지함 개수 -->
   <select id="totalNoteCount" parameterType="string" resultType="int">
      select count(*) from note where id = #{value}
   </select>
   
   <!-- 회원 탈퇴  -->
   <update id="updateStatusMember" parameterType="string">
      update member set status='0'
      where id=#{value}
   </update>
   <!-- 회원 탈퇴 후 Auth 삭제 -->
   <delete id="deleteAuth" parameterType="string">
   delete  from auth
       where id=#{value}
   </delete>
</mapper>









