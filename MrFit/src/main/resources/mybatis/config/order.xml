<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order">
 	<sql id="selectall">
 		select ono, id, totalprice, ordertime, status
 		from orders
 	</sql>
 	
 	
 	<!-- <resultMap type="movieVO" id="movieListRM">
		<result column="title" property="title" />
		<result column="name" property="directorVO.name" />
	</resultMap>
	<select id="getDirectorNameAndMovieTitleVO" resultMap="movieListRM">
		SELECT d.name, m.title
		FROM director d,mybatis_movie m
		WHERE d.id=m.director_id
		ORDER BY m.id ASC
	</select> -->
    <resultMap type="orderVO" id="ORM">
    	<result column="ono" property="ono"/>
    	<result column="totalprice" property="totalprice"/>
    	<result column="ordertime" property="ordertime"/>
    	<result column="status" property="status"/>
    	<result column="pdno" property="orderProductVO.pdno"/>
       	<result column="quantity" property="orderProductVO.quantity"/>
    </resultMap>
    
    <select id="findMyCart" parameterType="string" resultType="orderVO" resultMap="ORM">
    	SELECT o.ono, o.id, o.totalprice, o.ordertime, o.status, op.pdno, op.quantity
		FROM orders o, order_product op, product_detail pd
		WHERE o.id = #{value} and o.status = '장바구니' and o.ono = op.ono and pd.pdno = op.pdno
    </select>
    
    <resultMap type="productSizeVO" id="productSizeRM">
    	<result column="ps.size_name" property="size_type"/>
    </resultMap>
    
    <resultMap type="orderProductVO" id="orderProductRM">
    	<result column="pdno" property="pdno"/>
    	<result column="quantity" property="quantity"/>
    </resultMap>
    
    <resultMap type="productDetailVO" id="productDetailRM" extends="productSizeRM">
    	<result column="pc.color_name" property="color"/> 
    </resultMap>
    
    <resultMap type="productVO" id="PRM" extends="productDetailRM">
    	<result column="pc.color_name" property="productDetailVO.color"/>
       	<result column="ps.size_name" property="productDetailVO.productSizeVO.size_type"/>
    </resultMap>
    
    <select id="findProductDetailByPdno" parameterType="string" resultType="productVO" resultMap="PRM">
    	SELECT p.pno, pd.pdno, p.name, p.price, p.category, pc.color_name, ps.size_name
		FROM product_detail pd, product p, product_color pc, product_size ps
		WHERE pdno = #{value} and p.pno = pd.pno and pd.pcno = pc.pcno and pd.psno = ps.psno
    </select>
    <!-- 정현 장바구니 담기 -->
    <select id="findMyCartCount" resultType="int">
   		 select count(*) from ORDERS
		where id=#{value} and status='장바구니'
    </select>
    <insert id="registerOrder">
    	insert into orders(ono,totalprice,ordertime,status,id,destination) 
		values(ono_seq.nextval,${totalprice},sysdate,'장바구니',#{memberVO.id},#{memberVO.address})
    </insert>
    
    
    
    <insert id="registerOrderProduct" parameterType="orderVO">
    	insert into order_product(ono,pdno,quantity) 
		values((select ono 
				from orders 
				where id=#{memberVO.id} and status='장바구니'),
				<foreach item="item" collection="opList">
					#{item.pdno},${item.quantity}  
				</foreach>  	
				)
    </insert>
    
    <update id="updateOrder" parameterType="orderVO">    
		update orders 
		set totalprice=(totalprice+#{totalprice}),ordertime=sysdate  
		where id=#{memberVO.id} and status='장바구니'
    </update>
    
    <!-- 장바구니 담기 마무리 -->
    <!--  장바구니에서 상품 삭제 -->
    <delete id="deleteOrderProduct" parameterType="orderVO">
    	delete from orders_product
    	 where ono=#{ono} and pdno=
    	 <foreach item="item" collection="opList">
    	 #{item.pdno}
    	 </foreach>    	
    </delete>
    
    <update id="deleteUpdateOrder"  parameterType="orderVO">    
		update orders 
		set totalprice=totalprice-#{totalprice},ordertime=sysdate  
		where id=#{memberVO.id} and status='장바구니'
    </update>
    
   
</mapper>










