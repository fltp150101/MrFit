<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order">
	<!-- 주문 테이블 정보 가져오기 -->
 	<sql id="selectall">
 		select ono, id, totalprice, ordertime, status
 		from orders
 	</sql>

    <resultMap type="orderVO" id="ORM">
    	<result column="ono" property="ono"/>
    	<result column="totalprice" property="totalprice"/>
    	<result column="ordertime" property="ordertime"/>
    	<result column="status" property="status"/>
    </resultMap>
    <!-- 장바구니 보기기능 -->
    <select id="findMyCart" parameterType="string" resultType="orderVO" resultMap="ORM">
    	SELECT o.ono, o.id, o.totalprice, o.ordertime, o.status
		FROM orders o, order_product op, product_detail pd
		WHERE o.id = #{value} and o.status = '장바구니' and o.ono = op.ono and pd.pdno = op.pdno
    </select>
    
    <resultMap type="orderProductVO" id="OPRM">
    	<result column="p.pno" property="pno"/>
    	<result column="pd.pdno" property="pdno"/>
    	<result column="op.quantity" property="quantity"/>
    	<result column="p.name" property="name"/>
    	<result column="p.price" property="price"/>
    	<result column="p.category" property="category"/>
    	<result column="pc.color_name" property="color_name"/>
    	<result column="ps.size_name" property="size_name"/>
    	<result column="i.url" property="url"/>
    </resultMap>
    <!-- 주문 테이블에서 받은 주문 번호로 상품 정보 가져오기 -->
    <select id="findOrderProductInfoByPdnoAndOno" parameterType="string" resultMap="OPRM">
    	SELECT op.quantity, p.pno, pd.pdno, p.name, p.price, p.category, pc.color_name, ps.size_name, i.url
		FROM product_detail pd, product p, product_color pc, product_size ps, order_product op, orders o , image i 
		WHERE o.ono = #{value} and o.ono = op.ono and op.pdno=pd.pdno and p.pno = i.pno 
		and p.pno = pd.pno and pd.pcno = pc.pcno and pd.psno = ps.psno and i.url like '%' || 'thumb' || '%'
    </select>
    
    <resultMap type="orderProductVO" id="orderProductRM">
    	<result column="pdno" property="pdno"/>
    	<result column="quantity" property="quantity"/>
    </resultMap>
    
    <resultMap type="orderVO" id="ORM2">
		<result column="id" property="memberVO.id"/>
		<result column="address" property="memberVO.address"/>
 	</resultMap>
 	
 	<!-- 주문 내역 보기  -->
 	<select id="myOrderList" parameterType="string" resultType="orderVO" resultMap="ORM2">
 		select ono, totalprice, ordertime, status, id, destination
 		from orders
 		where id=#{value}
 		order by ono desc
 	</select>
 	
 	<!-- 주문 상품 정보 가져오기 -->
 	<select id="myOrderPrductList" parameterType="string" resultType="orderProductVO">
 		select op.ono, op.pdno, op.quantity,
				p.name, p.price, p.category,
				pd.pno,
				pc.color_name,
				ps.size_name,
				i.url
		from ORDER_PRODUCT op, PRODUCT p, PRODUCT_DETAIL pd, product_color pc, product_size ps, IMAGE i
		where ono=#{value} 
		and pd.pdno = op.pdno and p.pno = pd.pno and pd.psno = ps.psno and pd.pcno = pc.pcno
		and p.pno = i.pno
		and  i.url like 'main%'
 	</select>
    
    <resultMap type="productVO" id="PRM">
    	<result column="pc.color_name" property="productDetailVO.color"/>
       	<result column="ps.size_name" property="productDetailVO.productSizeVO.size_type"/>
    </resultMap>
    
    <select id="findProductDetailByPdno" parameterType="string" resultType="productVO" resultMap="PRM">
    	SELECT p.pno, pd.pdno, p.name, p.price, p.category, pc.color_name, ps.size_name
		FROM product_detail pd, product p, product_color pc, product_size ps
		WHERE pdno = #{value} and p.pno = pd.pno and pd.pcno = pc.pcno and pd.psno = ps.psno
    </select>
    
    <!-- 정현 장바구니 담기 -->
    <select id="findMyCartCount" resultType="int">
   		 select count(*) from ORDERS
		where id=#{value} and status='장바구니'
    </select>
     <!--[정현][11/22]  장바구니에서 상품 담기 장바구니 만들기-->
    <insert id="registerOrder" parameterType="orderVO">
    	insert into orders(ono,totalprice,ordertime,status,id,destination) 
		values(ono_seq.nextval,#{totalprice},sysdate,'장바구니',#{memberVO.id},#{memberVO.address})
    </insert>
    
    
     <!--[정현][11/22]  장바구니에서 상품 담기 장바구니와 상품상세정보 연결-->
    <insert id="registerOrderProduct" parameterType="orderVO">
    	insert into order_product(ono,pdno,quantity) 
		values((select ono 
				from orders 
				where id=#{memberVO.id} and status='장바구니'),
				<foreach item="item" collection="orderProductList">
					#{item.pdno},#{item.quantity}  
				</foreach>  	
				)
    </insert>
    
     <!--[정현][11/22]  장바구니에 해당 상품이 같은 색상 사이즈로 들어있는지 확인 -->
    <select id="findCartOderproduct" parameterType="orderVO" resultType="orderProductVO">
    	select ono,pdno,quantity from order_product 
    	where ono=(select ono 
				from orders 
				where id=#{memberVO.id} and status='장바구니') and 				
				pdno= #{orderProductList[0].pdno}
    			 
    </select>
    <!--[정현][11/22]  장바구니에서 상품 담기 장바구니 총합 가격 올리기-->
    <update id="updateOrder" parameterType="orderVO">    
		update orders 
		set totalprice=totalprice+#{totalprice},ordertime=sysdate  
		where id=#{memberVO.id} and status='장바구니'
    </update>
    
    <!-- 장바구니 담기 마무리 -->
    <!--[정현][11/22]  장바구니에서 상품 삭제 장바구니에서 상품 삭제-->
    <delete id="deleteOrderProduct" parameterType="orderVO">
    	delete from orders_product
    	 where ono=#{ono} and pdno=
    	 <foreach item="item" collection="orderProductList">
    	 #{item.pdno}
    	 </foreach>    	
    </delete>
    
   
    
    
    
      <!-- [석환][11.22] 장바구니 수량 수정 -->
    <update id="updateOrderQuantity" parameterType="orderProductVO">
 		update order_product set quantity=#{quantity}
 		where ono=#{ono} and pdno=#{pdno}
 	</update>
   
</mapper>










